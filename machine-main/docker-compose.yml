version: "3"
services:
    project-postgres-db: # service name
        build:
            context: ../docker-files/postgres-db/dependencies # Dockerfile DIR
            args:
                CONTAINER_USER: ${CONTAINER_USER}
                HOST_USER_GID: ${HOST_USER_GID}
                HOST_USER_UID: ${HOST_USER_UID}
                TIMEZONE: ${TIMEZONE}
        image: project-postgres-db
        container_name: project-postgres-db # container name
        ports:
            - "${HOST_PORT_DB}:5432"
        volumes:
            - /tmp/.X11-unix:/tmp/.X11-unix
            - ${HOME_DIR}/Desktop:/home/${CONTAINER_USER}/Desktop
            - ${DB_TMP_DIR}/postgresql:/var/lib/postgresql
        environment:
            - DISPLAY=${DISPLAY}
        command: bash -c "sudo chown -R postgres:postgres /var/lib/postgresql && sudo service postgresql start && infinite-loop"

    # =======================================================================================================    
    project-python-crawler: # service name
        build:
            context: ../docker-files/python-crawler/dependencies # Dockerfile DIR
            args:
                CONTAINER_USER: ${CONTAINER_USER}
                HOST_USER_GID: ${HOST_USER_GID}
                HOST_USER_UID: ${HOST_USER_UID}
                TIMEZONE: ${TIMEZONE}
        image: project-python-crawler
        container_name: project-python-crawler # container name
        volumes:
            - /tmp/.X11-unix:/tmp/.X11-unix
            - ${HOME_DIR}/Desktop:/home/${CONTAINER_USER}/Desktop
        environment:
            - DISPLAY=${DISPLAY}
        command: bash -c "sudo service cron start && sudo service cron restart && infinite-loop"


    project-spring-java: # service name
        build:
            context: ../docker-files/spring-java/dependencies # Dockerfile DIR
            args:
                CONTAINER_USER: ${CONTAINER_USER}
                HOST_USER_GID: ${HOST_USER_GID}
                HOST_USER_UID: ${HOST_USER_UID}
                TIMEZONE: ${TIMEZONE}
        image: project-spring-java
        container_name: project-spring-java # container name
        ports:
            - "${HOST_PORT_TOMCAT}:7002"
            - "${HOST_PORT_ECLIPSE_TOMCAT}:8080"
        volumes:
            - /tmp/.X11-unix:/tmp/.X11-unix
            - ${HOME_DIR}/Desktop:/home/${CONTAINER_USER}/Desktop
        environment:
            - DISPLAY=${DISPLAY}
        command: bash -c "/home/${CONTAINER_USER}/tomcat/apache-tomcat-9.0.54/bin/startup.sh && infinite-loop"
